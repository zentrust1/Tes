name: Download and Extract Zip from Google Drive

on:
  push:
    branches:
      - main  # Action akan berjalan ketika ada push ke branch 'main'

jobs:
  download_and_extract:
    runs-on: ubuntu-latest

    steps:
      # Langkah untuk checkout repo
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Install gdown untuk mendownload dari Google Drive
      - name: Install gdown
        run: |
          sudo apt update
          sudo apt install python3-pip -y
          pip3 install gdown

      # Mendownload file zip dari Google Drive
      - name: Download file from Google Drive
        run: |
          gdown https://drive.google.com/uc?id=1kfpysFE9NkyiIBcNn-mck5f7xLEJHfvk -O downloaded_file.zip

      # Mengekstrak file zip
      - name: Extract zip file
        run: |
          unzip downloaded_file.zip -d ./extracted_files

      
      # Mengekstrak file .tar.md5 (abaikan checksum md5)
      - name: Extract .tar.md5 file
        run: |
          for file in ./extracted_files/*.tar.md5; do
            if [ -f "$file" ]; then
              echo "Extracting $file..."
              tar -xf "$file" -C ./extracted_files
            fi
          done
      # Menampilkan isi direktori untuk verifikasi
      - name: List extracted files
        run: |
          ls -la ./extracted_files


      # Membuat release (Jika belum ada)
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: 'v1.0.10' # Ubah sesuai dengan versi yang diinginkan
          release_name: 'Release v1.0.0'
          draft: false
          prerelease: false

      # Upload setiap file hasil ekstraksi ke release
      - name: Upload extracted files to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
        continue-on-error: true  # Jika salah satu file gagal, proses tetap dilanjutkan
      - name: tes
        run: |
          for file in ./extracted_files/*; do
            if [ -f "$file" ]; then
              echo "Uploading $file..."
              gh release upload ${{ steps.create_release.outputs.upload_url }} "$file" --clobber
            fi
          done
