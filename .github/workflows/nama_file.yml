name: Build ROM Nusantara Project

on:
  workflow_dispatch:
    inputs:
      SYNC_URL:
        description: 'SYNC_URL'
        required: true
        default: 'https://github.com/NusantaraProject/android_manifest.git'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'eleven'
      DEVICE_TREE_URL:
        description: 'DEVICE_TREE_URL'
        required: true
      DEVICE_TREE_BRANCH:
        description: 'DEVICE_TREE_BRANCH'
        required: true
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
      COMMON_TREE_URL:
        description: 'COMMON_TREE_URL (if no common tree, leave blank)'
        required: false
      COMMON_PATH:
        description: 'COMMON_PATH (if no common tree, leave blank)'
        required: false
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
      BUILD_TARGET:
        description: 'BUILD_TARGET'
        required: true

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Check Out
      uses: actions/checkout@v3

    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main

    - name: Initialize workspace
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_ENV
      id: pwd

    - name: Prepare the build environment
      run: |
        sudo apt install git aria2 -y
        git clone https://github.com/NusantaraProject/misc/scripts
        cd scripts
        sudo bash setup/android_build_env.sh
        sed -i 's/cd -/cd ../g' setup/install_android_sdk.sh
        sudo bash setup/install_android_sdk.sh
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Sync Nusantara sources and minimal manifest
      run: |
        cd ${{ steps.pwd.outputs.workspace-folder }}
        git clone ${{ github.event.inputs.SYNC_URL }}
        cd android_manifest
        git checkout ${{ github.event.inputs.MANIFEST_BRANCH }}
        repo sync -j$(nproc --all) --force-sync
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Clone device tree
      run: |
        cd ${{ steps.pwd.outputs.workspace-folder }}
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Clone common tree
      if: |
        github.event.inputs.COMMON_TREE_URL != null
        && github.event.inputs.COMMON_PATH != null
      run: |
        cd ${{ steps.pwd.outputs.workspace-folder }}
        git clone ${{ github.event.inputs.COMMON_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.COMMON_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Building ROM
      run: |
        cd ${{ steps.pwd.outputs.workspace-folder }}
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch ${{ github.event.inputs.DEVICE_NAME }} && make clean && make -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Check the output directory before uploading
      run: |
        ls -al ${{ steps.pwd.outputs.workspace-folder }}/out/target/product/
        echo
        ls -al ${{ steps.pwd.outputs.workspace-folder }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ steps.pwd.outputs.workspace-folder }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
        name: ${{ github.event.inputs.DEVICE_NAME }}-ROM-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ github.event.inputs.MANIFEST_BRANCH }}
          Device: ${{ github.event.inputs.DEVICE_NAME }}
          Target: ${{ github.event.inputs.BUILD_TARGET }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
